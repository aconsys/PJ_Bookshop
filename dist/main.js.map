{"version":3,"file":"main.js","mappings":"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","sources":["webpack://pj_bookshop/webpack/bootstrap","webpack://pj_bookshop/webpack/runtime/global","webpack://pj_bookshop/webpack/runtime/publicPath","webpack://pj_bookshop/./src/js/localStorage.js","webpack://pj_bookshop/./src/js/cart.js","webpack://pj_bookshop/./src/js/renderProdList.js","webpack://pj_bookshop/./src/js/main.js","webpack://pj_bookshop/./src/js/slider.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","const setLocalStorage = (data) => {//Запись в localStorage, в аргумент передаём объект {инфо о книге}\r\n  const checkItem = localStorage.getItem(`${data.id}`);\r\n  if (!checkItem) {//Защита от повторной записи в localStorage. Если есть с таким ID - не записываем\r\n    localStorage.setItem(`${data.id}`, JSON.stringify(data));\r\n  }\r\n};\r\n\r\nconst removeLocalStorage = (target, key) => {//\r\n  let item = target.querySelector(`[data-book-info = \"${key}\"]`).dataset.bookid;\r\n  localStorage.removeItem(item);\r\n};\r\n\r\nexport { setLocalStorage, removeLocalStorage };\r\n","import { setLocalStorage, removeLocalStorage } from './localStorage.js';\r\n\r\nconst cart = document.getElementById('cart-count');\r\n\r\nconst setCartIcon = (count) => {//Инициализация иконки корзины наличия/отсутствия записей в localStorage\r\n  if (localStorage.length) {\r\n    cart.classList.remove('cart-btn__count_empty');\r\n    cart.textContent = count;\r\n  }\r\n};\r\n\r\nconst addInCart = (target, count) => {\r\n  target.innerHTML = 'In the cart';//Меняем текст кнопки\r\n  target.classList.add('btn_in-cart');//и стиль при добавлении в корзину\r\n  cart.classList.remove('cart-btn__count_empty');\r\n  cart.textContent = count;\r\n};\r\n\r\nconst deleteFromCart = (target, count) => {\r\n  target.innerHTML = 'Buy now';//Меняем текст кнопки\r\n  target.classList.remove('btn_in-cart');//и стиль при добавлении в корзину\r\n  if (count === 0) {\r\n    cart.classList.add('cart-btn__count_empty');\r\n  }\r\n  cart.textContent = count;\r\n};\r\n\r\nconst checkCartContents = (button) => {//Если при загрузке страници id книги есть\r\n  if (localStorage.length) {//в localStorage - изменить стиль кнопки в карточке книги\r\n    for(let i = 0; i < localStorage.length; i++) {\r\n      let key = localStorage.key(i);\r\n      if (key === button.dataset.bookid) {\r\n        button.innerHTML = 'In the cart';\r\n        button.classList.add('btn_in-cart');\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst getSelectedBookInfo = (collection) => {//Функция получает информацию о книге при нажатии кнопки Купить\r\n  for (let button of collection) {\r\n    checkCartContents(button);\r\n\r\n    button.addEventListener('click', (event) => {//Устанавливаем обработчики нажатий кнопок \"Buy now\"\r\n      const targetBook = event.target.parentElement.parentElement;//Корневой элемент карточки книги\r\n      const bookInfo = {//Объект для хранения инфы о книге\r\n        id: '',\r\n        thumbnail: '',\r\n        author: '',\r\n        title: '',\r\n        description: '',\r\n        price: '',\r\n      };\r\n\r\n      for (let key in bookInfo) {//Наполняем значения объекта bookInfo\r\n        let node = targetBook.querySelector(`[data-book-info = \"${key}\"]`);//Выбираем узел по ключу === data-аттрибуту\r\n\r\n        if (node && key === 'id') {\r\n          bookInfo[key] = node.dataset.bookid;//Берём ID из отдельного data-аттрибута\r\n        } else if (node && key === 'thumbnail') {\r\n          bookInfo[key] = node.getAttribute('src');//Берём ссылку на обложку из src\r\n        } else if (node) {\r\n          bookInfo[key] = node.textContent;//Остальные данные берём их текстового содержимого элемента\r\n        }\r\n      }\r\n\r\n      if (event.target.classList.contains('btn_in-cart')) {//Если выбранная книга есть в корзине, добавить\r\n        removeLocalStorage(targetBook, 'id');\r\n        deleteFromCart(event.target, localStorage.length);\r\n      } else {//Если книги нет в корзине, добавить\r\n        setLocalStorage(bookInfo);\r\n        addInCart(event.target, localStorage.length);\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport { getSelectedBookInfo, setCartIcon };\r\n","import noImage from \"../assets/no_photo.png\";\r\nimport ratingStarFilled from \"../assets/icons/star-filled.svg\";\r\nimport ratingStar from \"../assets/icons/star.svg\";\r\nimport { getSelectedBookInfo } from './cart.js';\r\n\r\nconst renderBooksList = (data, clearNode) => {//Функция вывода списка книг\r\n  let targetNode = document.getElementById('product-list');//Целевой узел для вставки стиска книг\r\n  let buyButtons = null;//Коллекция кнопок для загрузки книг в корзину\r\n\r\n  if (clearNode) {//Очистка списка книг при выборе новой категории\r\n    targetNode.innerHTML = '';\r\n  }\r\n\r\n  data.items.forEach(item => {\r\n    //Данные с сервера\r\n    let thumbnailData = null;\r\n    let bookId = item.id;\r\n    //Элементы DOM\r\n    let authorsNode ='';\r\n    let titleNode = '';\r\n    let ratingNode = '';\r\n    let descriptionNode = '';\r\n    let priceNode = '';\r\n    let productHtml = '';\r\n\r\n    if (item.volumeInfo.imageLinks) {//Вывод обложки книги\r\n      thumbnailData = item.volumeInfo.imageLinks.thumbnail;//Заглушка при отсутствии обложки;\r\n    } else {\r\n      thumbnailData = noImage;//Заглушка при отсутствии обложки;\r\n    }\r\n\r\n    if (item.volumeInfo.authors) {//вывод автора\r\n      let authorsListData = item.volumeInfo.authors;\r\n      let output = '';\r\n\r\n      authorsListData.forEach((item, index, arr) => {\r\n        if (index === arr.length - 1) {\r\n          output += `${item}`;\r\n        } else {\r\n          output += `${item}, `;\r\n        }\r\n      });\r\n\r\n      authorsNode = `<p class=\"product__author\" data-book-info=\"author\">${output}</p>`;\r\n    }\r\n\r\n    if (item.volumeInfo.title) {//Вывод заголовка\r\n      let titleData = item.volumeInfo.title;\r\n      titleNode = `<h1 class=\"product__title\" data-book-info=\"title\">${titleData}</h1>`;\r\n    }\r\n\r\n    if (item.volumeInfo.averageRating) {//Вывод рейтинга\r\n      // let ratingData = item.volumeInfo.averageRating;\r\n      let ratingsCountData = item.volumeInfo.ratingsCount;\r\n      ratingNode = `<div class=\"product__rating\">\r\n                      <div class=\"rating__stars\">\r\n                        <img src=${ratingStarFilled} alt=\"Icon\" class=\"star\">\r\n                        <img src=${ratingStarFilled} alt=\"Icon\" class=\"star\">\r\n                        <img src=${ratingStarFilled}  alt=\"Icon\" class=\"star\">\r\n                        <img src=${ratingStar}  alt=\"Icon\" class=\"star\">\r\n                        <img src=${ratingStar}  alt=\"Icon\" class=\"star\">\r\n                      </div>\r\n                      <span class=\"review-nums\">${ratingsCountData} review</span>\r\n                    </div>`;\r\n    }\r\n\r\n    if (item.volumeInfo.description && item.volumeInfo.description.length > 90) {//Вывод описания, если описание > 90 символов\r\n      let descriptionData = item.volumeInfo.description;\r\n      let description = descriptionData.slice(0, 91) + '...';\r\n      descriptionNode = `<p class=\"product__description\" data-book-info=\"description\">${description}</p>`;\r\n    } else if (item.volumeInfo.description) {\r\n      let descriptionData = item.volumeInfo.description;\r\n      descriptionNode = `<p class=\"product__description\" data-book-info=\"description\">${descriptionData}</p>`;\r\n    }\r\n\r\n    if (item.saleInfo.listPrice) {\r\n\r\n      let priceData = item.saleInfo.listPrice.amount;\r\n      const currency = 77;//Курс доллара к рублю (т.к. цены должны бать в долларах, а API выдаёт в рублях)\r\n      let priceValue = Math.floor(priceData * 100 / currency) / 100;\r\n\r\n      priceNode = `<div class=\"product__price\">\r\n                    <span class=\"price__currency\">$</span><span class=\"price__value\" data-book-info=\"price\">${priceValue}</span>\r\n                  </div>`;\r\n    }\r\n\r\n    productHtml = `<div class=\"products-list__item product\">\r\n                      <img src=\"${thumbnailData}\" alt=\"Book cover\" class=\"product__img\" data-book-info=\"thumbnail\">\r\n                      <div class=\"product__card\">\r\n                        ${authorsNode}\r\n                        ${titleNode}\r\n                        ${ratingNode}\r\n                        ${descriptionNode}\r\n                        ${priceNode}\r\n                        <button class=\"btn buy-button\" data-book-info=\"id\" data-bookid=\"${bookId}\">Buy now</button>\r\n                      </div>\r\n                    </div>`;\r\n\r\n    targetNode.insertAdjacentHTML('beforeend', productHtml);//Вставка html-кода карточки книги на страницу\r\n  });\r\n\r\n  buyButtons = document.getElementsByClassName('buy-button');//Коллекция кнопок \"Buy now\" полученная из сгенерированного списка книг\r\n  getSelectedBookInfo(buyButtons);//Получаем информацию о выбранной книге по клику на \"Buy now\"\r\n\r\n};\r\n\r\nexport { renderBooksList };\r\n","import { renderBooksList } from './renderProdList.js';\r\nimport { setCartIcon } from './cart.js';\r\n\r\nconst loadButton = document.getElementById('btn-load');\r\nconst categories = document.querySelectorAll('.categories__item');\r\nconst url = 'https://www.googleapis.com/books/v1/volumes';\r\nconst apiKey = 'AIzaSyB7D4Uic0eTPc-0H3yYfiBbZ3VDM5k6sgc';\r\nconst httpRequestParam = {//GET-параметры при первоначальной загрузке страницы\r\n  category: 'Architecture',\r\n  startIndex: 0,\r\n  maxResults: 6,\r\n  langRestrict: 'en',\r\n};\r\n\r\nconst selectCategory = (category) => {//Функция установки стиля выбранной категории\r\n  let currentCategoryNode = document.querySelector('.categories__item_selected');//Текущая категория\r\n  let newCategoryNode = category;//Вновь выбранная категория\r\n\r\n  currentCategoryNode.classList.remove('categories__item_selected');\r\n  newCategoryNode.classList.add('categories__item_selected');\r\n};\r\n\r\nconst getHttpRequestParam = (resetStartIndex) => {//Функция обновления GET-параметров.\r\n  let currentCategoryNode = document.querySelector('.categories__item_selected');\r\n  let currentCategoryName = currentCategoryNode.dataset.category;\r\n\r\n  httpRequestParam.category = currentCategoryName;\r\n\r\n  if (resetStartIndex === true) {//Сброс GET-параметра startIndex при выборе новой категории\r\n    httpRequestParam.startIndex = 0;\r\n  }\r\n\r\n  return httpRequestParam;\r\n};\r\n\r\nconst useRequest = (url, getParam, callback, clearNode) => {//Запрос данных с сервера\r\n  let link = `${url}?q=\"subject:${httpRequestParam.category}\"&${apiKey}&printType=books&startIndex=${httpRequestParam.startIndex}&maxResults=${httpRequestParam.maxResults}&langRestrict=${httpRequestParam.langRestrict}`;\r\n\r\n  fetch(link)\r\n  .then(response => response.json())//Получение данных в формате json\r\n  .then((data) => {//Обработка данных callback-функцией\r\n    callback(data, clearNode);\r\n  })\r\n  .catch(err => console.log(err.message));\r\n\r\n\r\n};\r\n\r\ncategories.forEach(category => category.addEventListener('click', (event) => {//Обработчик кликов по категориям\r\n  event.preventDefault();\r\n\r\n  selectCategory(category);//Установка стиля выбранной категории\r\n\r\n  const getParam = getHttpRequestParam(true);//Обновление GET-параметров\r\n\r\n\r\n  useRequest(url, getParam, renderBooksList, true);\r\n}));\r\n\r\nloadButton.addEventListener('click', () => {//Обработчик кликов по кнопку 'Load more'\r\n  const getParam = getHttpRequestParam();\r\n\r\n  getParam.startIndex += 6;\r\n\r\n  useRequest(url, getParam, renderBooksList, false);\r\n});\r\n\r\nsetCartIcon(localStorage.length);//Иницифлизация состояния иконки корзины\r\n\r\nuseRequest(url, httpRequestParam, renderBooksList, false);\r\n","import bannerImg1 from '../assets/slider/banner-1.png';\r\nimport bannerImg2 from '../assets/slider/banner-2.png';\r\nimport bannerImg3 from '../assets/slider/banner-3.png';\r\n\r\n\r\nlet images = [{\r\n  url: bannerImg1\r\n}, {\r\n  url: bannerImg2\r\n}, {\r\n  url: bannerImg3\r\n}];\r\n\r\nfunction initSlider(options) {\r\n  if (!images || !images.length) return;\r\n\r\n  options = options || {\r\n    titles: true,\r\n    dots: true,\r\n    autoplay: false\r\n  };\r\n\r\n  let sliderImages = document.querySelector('.slider__images');\r\n  let sliderDots = document.querySelector('.slider__dots');\r\n\r\n  initImages();\r\n\r\n  if (options.dots) {\r\n    initDots();\r\n  }\r\n\r\n  if (options.titles) {\r\n    initTitles();\r\n  }\r\n\r\n  if (options.autoplay) {\r\n    initAutoplay();\r\n  }\r\n\r\n  function initImages() {\r\n    images.forEach((image, index) => {\r\n      let imageDiv = `<div class=\"image n${index} ${index === 0 ? \"active\" : \"\" }\" style=\"background-image:url(${images[index].url})\" data-index=\"${index}\"></div>`;\r\n\r\n      sliderImages.innerHTML += imageDiv;\r\n    });\r\n  }\r\n\r\n  function initDots() {\r\n    images.forEach((image, index) => {\r\n      let dotItem = `<div class=\"slider__dots-item n${index} ${index === 0 ? \"active\" : \"\"}\" data-index=\"${index}\"></div>`;\r\n\r\n      sliderDots.innerHTML += dotItem;\r\n    });\r\n\r\n    sliderDots.querySelectorAll('.slider__dots-item').forEach(dot => {\r\n        dot.addEventListener('click', event => {\r\n          let currentDot = event.target.dataset.index;\r\n\r\n          moveSlider(currentDot);\r\n        });\r\n    });\r\n  }\r\n\r\n  function initTitles() {\r\n    let titleDiv = `<div class=\"slider__images-title\">${images[0].title}</div>`;\r\n\r\n    sliderImages.innerHTML += titleDiv;\r\n  }\r\n\r\n  function changeTitle(num) {\r\n    if (!images[num].title) return;\r\n    let sliderTitle = sliderImages.querySelector('.slider__images-title');\r\n\r\n    sliderTitle.innerText = images[num].title;\r\n  }\r\n\r\n  function initAutoplay() {\r\n    setInterval(() => {\r\n      let currentNum = +sliderImages.querySelector('.active').dataset.index;\r\n      let nextNum = currentNum === images.length - 1 ? 0 : currentNum + 1;\r\n\r\n      moveSlider(nextNum);\r\n    }, options.autoplayInterval);\r\n  }\r\n\r\n  function moveSlider(num) {\r\n    sliderImages.querySelector('.active').classList.remove('active');\r\n    sliderImages.querySelector('.n' + num).classList.add('active');\r\n\r\n    if (options.dots) {\r\n      sliderDots.querySelector('.active').classList.remove('active');\r\n      sliderDots.querySelector('.n' + num).classList.add('active');\r\n    }\r\n\r\n    if (options.titles) changeTitle(num);\r\n  }\r\n}\r\n\r\nlet sliderOption = {\r\n  titles: false,\r\n  dots: true,\r\n  autoplay: true,\r\n  autoplayInterval: 5000\r\n};\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  initSlider(sliderOption);\r\n});\r\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","removeLocalStorage","target","key","item","querySelector","dataset","bookid","localStorage","removeItem","cart","getElementById","addInCart","count","innerHTML","classList","add","remove","textContent","checkCartContents","button","i","renderBooksList","data","clearNode","targetNode","buyButtons","items","forEach","thumbnailData","bookId","id","authorsNode","titleNode","ratingNode","descriptionNode","priceNode","productHtml","volumeInfo","imageLinks","thumbnail","authors","authorsListData","output","index","arr","title","averageRating","ratingsCountData","ratingsCount","description","slice","saleInfo","listPrice","priceData","amount","currency","Math","floor","insertAdjacentHTML","getElementsByClassName","collection","addEventListener","event","targetBook","parentElement","bookInfo","author","price","node","getAttribute","contains","getItem","setItem","JSON","stringify","getSelectedBookInfo","loadButton","categories","querySelectorAll","url","httpRequestParam","category","startIndex","maxResults","langRestrict","getHttpRequestParam","resetStartIndex","currentCategoryName","useRequest","getParam","callback","link","fetch","then","response","json","catch","err","console","log","message","preventDefault","newCategoryNode","selectCategory","sliderOption","titles","dots","autoplay","autoplayInterval","options","sliderImages","sliderDots","moveSlider","num","innerText","changeTitle","image","imageDiv","dotItem","dot","titleDiv","initTitles","setInterval","currentNum","initSlider"],"sourceRoot":""}